/*
* generated by Xtext
*/
package org.project.droolsDSL.ui.labeling

import com.google.inject.Inject
import org.project.droolsDSL.ddsl.Fluent
import org.project.droolsDSL.ddsl.Event
import org.project.droolsDSL.ddsl.Statement
import org.project.droolsDSL.ddsl.DroolsModel
import org.project.droolsDSL.ddsl.EventFeature

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
class DdslLabelProvider extends org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider {

	@Inject
	new(org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	def image(Event ele) {"EventOutlineIcon.gif"}
	
	def image(EventFeature ele) {"ParamOutlineIcon.gif"}
	
	def image(Fluent ele) {"FluentOutlineIcon.gif"}

//bisogna rappresentare direttamente la valutazione di espressioni e condizioni!!!
	def text(Fluent a) {
		a.name + " : " + a.valuePart.eClass.name +
		
		if (a.timePart != null && a.condPart != null)
			" , " + a.timePart.eClass.name + " , " + a.condPart.eClass.name
		else if (a.timePart == null && a.condPart != null)
			" , " + a.condPart.eClass.name 
		else if (a.timePart != null && a.condPart == null)
			" , " + a.timePart.eClass.name 
		else ""
	}	
	
	def text(Statement a) {
 		"Statement for EVENT --> " + a.event.eventName
 	}
	
}
