/*
* generated by Xtext
*/
package org.project.droolsDSL.ui.quickfix

import org.eclipse.xtext.ui.editor.quickfix.Fix
import org.project.droolsDSL.validation.DdslValidator
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor
import org.eclipse.xtext.validation.Issue
import org.project.droolsDSL.ddsl.EventFeature

/**
 * Custom quickfixes.
 *
 * see http://www.eclipse.org/Xtext/documentation.html#quickfixes
 */
class DdslQuickfixProvider extends org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider {


	@Fix(DdslValidator::EVENT_LOWERCASE)
	def capitalizeEventName (Issue issue, IssueResolutionAcceptor acceptor){
		acceptor.accept(issue, "Capitalize event name", 
			"Capitalize the name of '" + issue.data.get(0) + "'", 	//description
			"",														//icon
			[
				context | 
				val xtextDocument = context.xtextDocument
				val firstLetter = xtextDocument.get(issue.offset, 1);
				xtextDocument.replace(issue.offset, 1, firstLetter.toFirstUpper);
			]
				
		);
	}
	
	@Fix(DdslValidator::FLUENT_LOWERCASE)
	def capitalizeFluentName (Issue issue, IssueResolutionAcceptor acceptor){
		acceptor.accept(issue, "Capitalize fluent name", 
			"Capitalize the name of '" + issue.data.get(0) + "'", 	//description
			"",														//icon
			[
				context | 
				val xtextDocument = context.xtextDocument
				val firstLetter = xtextDocument.get(issue.offset, 1);
				xtextDocument.replace(issue.offset, 1, firstLetter.toFirstUpper);
			]
				
		);
	}
	
	@Fix(DdslValidator::PARAM_UPPERCASE)
	def uncapitalizeParamtName (Issue issue, IssueResolutionAcceptor acceptor){
		acceptor.accept(issue, "Uncapitalize event feature name", 
			"Uncapitalize the name of '" + issue.data.get(0) + "'", 	//description
			"",														//icon
			[
				element, context | 
				(element as EventFeature).name = issue.data.get(0).toFirstLower;
			]
				
		);
	}
}
