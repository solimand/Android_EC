/*
 * generated by Xtext
 */
package org.project.droolsDSL.validation

import org.eclipse.xtext.validation.Check

import static extension java.lang.Character.*
import org.project.droolsDSL.ddsl.Event
import org.project.droolsDSL.ddsl.DdslPackage
import org.project.droolsDSL.ddsl.Fluent
import org.project.droolsDSL.ddsl.EventFeature

/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class DdslValidator extends AbstractDdslValidator {

	public static val EVENT_LOWERCASE = 'org.project.droolsDSL.ddsl.EventLowercase'
	public static val FLUENT_LOWERCASE = 'org.project.droolsDSL.ddsl.FluentLowercase'
	public static val PARAM_UPPERCASE = 'org.project.droolsDSL.ddsl.ParamUppercase'
	

	@Check
	def checkEventNameStartsWithCapital (Event event){
		if (event.eventName.charAt(0).lowerCase)
		error ("Event name should start with a capital",
			DdslPackage::eINSTANCE.event_EventName,
			EVENT_LOWERCASE, event.eventName
		)
	}

	@Check
	def checkFluentNameStartsWithCapital (Fluent fluent){
		if (fluent.name.charAt(0).lowerCase)
		error ("Fluent name should start with a capital",
			DdslPackage::eINSTANCE.referenceType_Name,
			FLUENT_LOWERCASE, fluent.name
		)
	}
	
	@Check
	def checkParamNameStartsWithLower (EventFeature param){
		if (param.name.charAt(0).upperCase)
		error ("Event Feature name should start with a lowercase",
			DdslPackage::eINSTANCE.referenceType_Name,
			PARAM_UPPERCASE, param.name
		)
	}
	
	/*
	 * Bisogna controllare che non inizino con un numero
	 */
}
